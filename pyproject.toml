[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "homepage-article-scraper"
version = "1.0.0"
description = "A high-performance web scraper for extracting articles from news websites and blogs with AI-powered summarization"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Homepage Article Scraper Team", email = "contact@example.com"}
]
maintainers = [
    {name = "Homepage Article Scraper Team", email = "contact@example.com"}
]
keywords = ["web-scraping", "content-extraction", "ai-summarization", "news", "blog", "scrapy", "nlp"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]
requires-python = ">=3.11"
dependencies = [
    "scrapy>=2.13.3",
    "trafilatura>=1.9.0",
    "beautifulsoup4>=4.12.3",
    "lxml>=4.9.4,<5.2.0",
    "python-dotenv>=1.0.1",
    "transformers>=4.43.4",
    "torch>=2.3.1",
    "bitsandbytes>=0.41.0",
    "accelerate>=0.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.2",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.1",
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=8.2.2",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.1",
    "pytest-mock>=3.11.1",
    "pytest-asyncio>=0.21.1",
]

[project.urls]
Homepage = "https://github.com/yourusername/homepage-article-scraper"
Documentation = "https://github.com/yourusername/homepage-article-scraper#readme"
Repository = "https://github.com/yourusername/homepage-article-scraper.git"
"Bug Tracker" = "https://github.com/yourusername/homepage-article-scraper/issues"
"Source Code" = "https://github.com/yourusername/homepage-article-scraper"

[project.scripts]
homepage-scraper = "run:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["scraper*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["scraper"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]
